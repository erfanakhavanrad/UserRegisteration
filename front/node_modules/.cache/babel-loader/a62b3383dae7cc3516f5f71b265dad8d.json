{"remainingRequest":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/babel-loader/lib/index.js!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/babel.config.js","mtime":1681761512392},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJhbmQgZnJvbSAiLi91dGlscy9SYW5kLmpzIjsKaW1wb3J0IEJhbGxQYXJ0aWNsZXMgZnJvbSAiLi9wYXJ0aWNsZXMvQmFsbFBhcnRpY2xlcy52dWUiOwppbXBvcnQgQ29sb3JQYXJ0aWNsZXMgZnJvbSAiLi9wYXJ0aWNsZXMvQ29sb3JQYXJ0aWNsZXMudnVlIjsKaW1wb3J0IENpcmNsZVBhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9DaXJjbGVQYXJ0aWNsZXMudnVlIjsKaW1wb3J0IENvYndlYlBhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9Db2J3ZWJQYXJ0aWNsZXMudnVlIjsKaW1wb3J0IFRoaWNrUGFydGljbGVzIGZyb20gIi4vcGFydGljbGVzL1RoaWNrUGFydGljbGVzLnZ1ZSI7CmltcG9ydCBDdXN0b21QYXJ0aWNsZXMgZnJvbSAiLi9wYXJ0aWNsZXMvQ3VzdG9tUGFydGljbGVzLnZ1ZSI7CmltcG9ydCBMaW5lc1BhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9MaW5lc1BhcnRpY2xlcy52dWUiOwppbXBvcnQgUG9seWdvblBhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9Qb2x5Z29uUGFydGljbGVzLnZ1ZSI7CmltcG9ydCBTcXVhcmVQYXJ0aWNsZXMgZnJvbSAiLi9wYXJ0aWNsZXMvU3F1YXJlUGFydGljbGVzLnZ1ZSI7CmltcG9ydCBGb3VudGFpblBhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9Gb3VudGFpblBhcnRpY2xlcy52dWUiOwppbXBvcnQgVGFkcG9sZVBhcnRpY2xlcyBmcm9tICIuL3BhcnRpY2xlcy9UYWRwb2xlUGFydGljbGVzLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUGFydGljbGVzQmciLAogIGNvbXBvbmVudHM6IHsKICAgIENvbG9yUGFydGljbGVzLAogICAgQ2lyY2xlUGFydGljbGVzLAogICAgQ29id2ViUGFydGljbGVzLAogICAgVGhpY2tQYXJ0aWNsZXMsCiAgICBMaW5lc1BhcnRpY2xlcywKICAgIEZvdW50YWluUGFydGljbGVzLAogICAgQ3VzdG9tUGFydGljbGVzLAogICAgUG9seWdvblBhcnRpY2xlcywKICAgIFNxdWFyZVBhcnRpY2xlcywKICAgIFRhZHBvbGVQYXJ0aWNsZXMsCiAgICBCYWxsUGFydGljbGVzCiAgfSwKICBwcm9wczogewogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogInJhbmRvbSIKICAgIH0sCiAgICBudW06IFtTdHJpbmcsIE51bWJlcl0sCiAgICBiZzogQm9vbGVhbiwKICAgIGNvbG9yOiBTdHJpbmcsCiAgICBjb25maWc6IE9iamVjdCwKICAgIGNhbnZhczogT2JqZWN0LAogICAgbGlzdDogQXJyYXksCiAgICBnbG9iYWxDb21wb3NpdGVPcGVyYXRpb246IFN0cmluZwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnRpY2xlczogImNvbG9yLXBhcnRpY2xlcyIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXROdW0oKSB7CiAgICAgIHJldHVybiArdGhpcy5udW07CiAgICB9LAogICAgZ2V0UmFuZG9tKCkgewogICAgICBpZiAoIXRoaXMucmFuZG9tKSB7CiAgICAgICAgLy8gQ29kZSBzb3VyY2UgZnJvbSBoZXJlLCB0aGFua3MgYXV0aG9yCiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RyYXdjYWxsL1Byb3Rvbi9ibG9iL2doLXBhZ2VzL3NvdXJjZS9zcmMvdXRpbHMvUmFuZC5qcwogICAgICAgIHRoaXMucmFuZG9tID0gbmV3IFJhbmQoKTsKICAgICAgICB0aGlzLnJhbmRvbS5zZXQoMC4yNSwgImNvbG9yLXBhcnRpY2xlcyIpOwogICAgICAgIHRoaXMucmFuZG9tLnNldCgwLjIsICJiYWxsLXBhcnRpY2xlcyIpOwogICAgICAgIHRoaXMucmFuZG9tLnNldCgwLjIsICJjaXJjbGUtcGFydGljbGVzIik7CiAgICAgICAgdGhpcy5yYW5kb20uc2V0KDAuMiwgImNvYndlYi1wYXJ0aWNsZXMiKTsKICAgICAgICB0aGlzLnJhbmRvbS5zZXQoMC4yLCAidGhpY2stcGFydGljbGVzIik7CiAgICAgICAgdGhpcy5yYW5kb20uc2V0KDAuMiwgImxpbmVzLXBhcnRpY2xlcyIpOwogICAgICAgIHRoaXMucmFuZG9tLnNldCgwLjIsICJmb3VudGFpbi1wYXJ0aWNsZXMiKTsKICAgICAgICB0aGlzLnJhbmRvbS5zZXQoMC4yLCAicG9seWdvbi1wYXJ0aWNsZXMiKTsKICAgICAgICB0aGlzLnJhbmRvbS5zZXQoMC4yLCAic3F1YXJlLXBhcnRpY2xlcyIpOwogICAgICAgIHRoaXMucmFuZG9tLnNldCgwLjIsICJ0YWRwb2xlLXBhcnRpY2xlcyIpOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnJhbmRvbS5nZXRSZXN1bHQoKTsKICAgIH0sCiAgICBnZXRGcm9tTGlzdCgpIHsKICAgICAgaWYgKCF0aGlzLmxpc3QpIHJldHVybiB0aGlzLmdldFJhbmRvbSgpOwogICAgICBsZXQgaXRlbSA9IHRoaXMubGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmxpc3QubGVuZ3RoKV07CiAgICAgIGl0ZW0gPSB0aGlzLnRyYW5zZm9ybU5hbWUoaXRlbSk7CiAgICAgIHJldHVybiBpdGVtOwogICAgfSwKICAgIHRyYW5zZm9ybU5hbWUobmFtZSkgewogICAgICBuYW1lID0gU3RyaW5nKG5hbWUpLnRvTG93ZXJDYXNlKCkgfHwgInJhbmRvbSI7CiAgICAgIGlmIChuYW1lLmluZGV4T2YoIi0iKSA8PSAwKSBuYW1lICs9ICItcGFydGljbGVzIjsKICAgICAgcmV0dXJuIG5hbWU7CiAgICB9LAogICAgc2V0UGFydGljbGVzKCkgewogICAgICB0aGlzLnBhcnRpY2xlcyA9IHRoaXMudHJhbnNmb3JtTmFtZSh0aGlzLnR5cGUpOwogICAgICBpZiAodGhpcy5wYXJ0aWNsZXMuaW5kZXhPZigicmFuZG9tIikgPT09IDApIHsKICAgICAgICB0aGlzLnBhcnRpY2xlcyA9IHRoaXMuZ2V0UmFuZG9tKCk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMucGFydGljbGVzLmluZGV4T2YoImxpc3QiKSA9PT0gMCkgewogICAgICAgIHRoaXMucGFydGljbGVzID0gdGhpcy5nZXRGcm9tTGlzdCgpOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5zZXRQYXJ0aWNsZXMoKTsKICB9LAogIGJlZm9yZU1vdW50KCkge30KfTs="},{"version":3,"mappings":"AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAA;MACAC;MACAC;IACA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACAC;MAEA;IACA;IAEAC;MACA/B;MACA;MACA;IACA;IAEAgC;MACA;MACA;QACA;MACA;MAEA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;AACA","names":["name","components","ColorParticles","CircleParticles","CobwebParticles","ThickParticles","LinesParticles","FountainParticles","CustomParticles","PolygonParticles","SquareParticles","TadpoleParticles","BallParticles","props","type","required","default","num","bg","color","config","canvas","list","globalCompositeOperation","data","particles","methods","getNum","getRandom","getFromList","item","transformName","setParticles","created","beforeMount"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg","sources":["ParticlesBg.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"particles\"\n    :globalCompositeOperation=\"globalCompositeOperation\"\n    :num=\"getNum()\"\n    :bg=\"bg\"\n    :color=\"color\"\n    :canvas=\"canvas\"\n    :config=\"config\"\n  ></component>\n</template>\n\n<script>\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\n\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n\n    getFromList(){\n      if(!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n\n      return item;\n    },\n\n    transformName(name){\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}