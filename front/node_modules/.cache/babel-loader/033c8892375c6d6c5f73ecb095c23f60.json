{"remainingRequest":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/babel-loader/lib/index.js!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/babel.config.js","mtime":1681761512392},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aryanmostafavi/Desktop/project/uni-form/SalesManRoute/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENhbnZhc0NvbXAgZnJvbSAiLi9DYW52YXNDb21wLnZ1ZSI7CmltcG9ydCBQcm90b24gZnJvbSAicHJvdG9uLWVuZ2luZSI7CmltcG9ydCBSQUZNYW5hZ2VyIGZyb20gInJhZi1tYW5hZ2VyIjsKY29uc3QgQ09MT1IgPSBbIiNmNmI5M2IiLCAiIzE4ZGNmZiIsICIjY2Q4NGYxIiwgIiNFRDRDNjciLCAiI2ZmZmZmZiIsICIjYjcxNTQwIiwgIiMzMmZmN2UiLCAiI2ZmMzgzOCJdOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBvbHlnb25QYXJ0aWNsZXMiLAogIGNvbXBvbmVudHM6IHsKICAgIENhbnZhc0NvbXAKICB9LAogIHByb3BzOiB7CiAgICBjYW52YXM6IE9iamVjdCwKICAgIGNhbnZhczogT2JqZWN0LAogICAgYmc6IEJvb2xlYW4sCiAgICBjb2xvcjogU3RyaW5nLAogICAgbnVtOiBOdW1iZXIsCiAgICBjb25maWc6IHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYW52YXNJbml0ZWQoY2FudmFzKSB7CiAgICAgIGNvbnN0IHdpZHRoID0gY2FudmFzLndpZHRoOwogICAgICBjb25zdCBoZWlnaHQgPSBjYW52YXMuaGVpZ2h0OwogICAgICB0aGlzLmNyZWF0ZVByb3RvbihjYW52YXMpOwogICAgICB0aGlzLmNyZWF0ZUVtaXR0ZXIoewogICAgICAgIGNhbnZhcywKICAgICAgICB4OiB3aWR0aCAvIDIsCiAgICAgICAgeTogaGVpZ2h0IC8gMiwKICAgICAgICBtYWluRW1pdHRlcjogdHJ1ZSwKICAgICAgICB6b25lOiAiYm91bmQiCiAgICAgIH0pOwogICAgICBSQUZNYW5hZ2VyLmFkZCh0aGlzLnJlbmRlclByb3Rvbik7CiAgICB9LAogICAgY2FudmFzUmVzaXplKHsKICAgICAgd2lkdGgsCiAgICAgIGhlaWdodAogICAgfSkgewogICAgICB0aGlzLnByb3Rvbi5yZW5kZXJlcnNbMF0ucmVzaXplKHdpZHRoLCBoZWlnaHQpOwogICAgfSwKICAgIGNhbnZhc01vdXNlRG93bihlKSB7fSwKICAgIGNyZWF0ZVByb3RvbihjYW52YXMpIHsKICAgICAgdGhpcy5wcm90b24gPSBuZXcgUHJvdG9uKCk7CiAgICAgIGNvbnN0IHJlbmRlcmVyID0gdGhpcy5jcmVhdGVSZW5kZXJlcihjYW52YXMpOwogICAgICB0aGlzLnByb3Rvbi5hZGRSZW5kZXJlcihyZW5kZXJlcik7CiAgICB9LAogICAgY3JlYXRlUmVuZGVyZXIoY2FudmFzKSB7CiAgICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgiMmQiKTsKICAgICAgY29uc3QgcmVuZGVyZXIgPSBuZXcgUHJvdG9uLkN1c3RvbVJlbmRlcmVyKCk7CiAgICAgIHJlbmRlcmVyLm9uUHJvdG9uVXBkYXRlID0gKCkgPT4gewogICAgICAgIGNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7CiAgICAgIH07CiAgICAgIHJlbmRlcmVyLm9uUGFydGljbGVDcmVhdGVkID0gcGFydGljbGUgPT4gewogICAgICAgIHBhcnRpY2xlLmRhdGEuY291bnQgPSBQcm90b24uTWF0aFV0aWwucmFuZG9tQVRvQigzLCAxMCwgdHJ1ZSk7CiAgICAgIH07CiAgICAgIHJlbmRlcmVyLm9uUGFydGljbGVVcGRhdGUgPSBwYXJ0aWNsZSA9PiB7CiAgICAgICAgY29udGV4dC5zYXZlKCk7CiAgICAgICAgY29udGV4dC5nbG9iYWxBbHBoYSA9IHBhcnRpY2xlLmFscGhhOwogICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gcGFydGljbGUuY29sb3I7CiAgICAgICAgY29udGV4dC50cmFuc2xhdGUocGFydGljbGUucC54LCBwYXJ0aWNsZS5wLnkpOwogICAgICAgIGNvbnRleHQucm90YXRlKFByb3Rvbi5NYXRoVXRpbC5kZWdyZWVUcmFuc2Zvcm0ocGFydGljbGUucm90YXRpb24pKTsKICAgICAgICBjb250ZXh0LnRyYW5zbGF0ZSgtcGFydGljbGUucC54LCAtcGFydGljbGUucC55KTsKICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpOwogICAgICAgIGRyYXdQb2x5Z29uKHBhcnRpY2xlLCBwYXJ0aWNsZS5kYXRhLmNvdW50KTsKICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpOwogICAgICAgIGNvbnRleHQuZmlsbCgpOwogICAgICAgIGNvbnRleHQuZ2xvYmFsQWxwaGEgPSAxOwogICAgICAgIGNvbnRleHQucmVzdG9yZSgpOwogICAgICB9OwogICAgICByZW5kZXJlci5vblBhcnRpY2xlRGVhZCA9IHBhcnRpY2xlID0+IHt9OwogICAgICBjb25zdCBkcmF3UG9seWdvbiA9IChwYXJ0aWNsZSwgY291bnQpID0+IHsKICAgICAgICBpZiAoY291bnQgPj0gNykgewogICAgICAgICAgY29udGV4dC5hcmMocGFydGljbGUucC54LCBwYXJ0aWNsZS5wLnksIHBhcnRpY2xlLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIsIHRydWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zdCByYWRpdXMgPSBwYXJ0aWNsZS5yYWRpdXM7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBjb3VudDsgaSsrKSB7CiAgICAgICAgICAgIGxldCB4ID0gcGFydGljbGUucC54ICsgcmFkaXVzICogTWF0aC5jb3MoTWF0aC5QSSAvIDE4MCAqIDM2MCAvIGNvdW50ICogaSk7CiAgICAgICAgICAgIGxldCB5ID0gcGFydGljbGUucC55ICsgcmFkaXVzICogTWF0aC5zaW4oTWF0aC5QSSAvIDE4MCAqIDM2MCAvIGNvdW50ICogaSk7CiAgICAgICAgICAgIGlmIChpID09PSAwKSBjb250ZXh0Lm1vdmVUbyh4LCB5KTtlbHNlIGNvbnRleHQubGluZVRvKHgsIHkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgcmV0dXJuIHJlbmRlcmVyOwogICAgfSwKICAgIGNyZWF0ZUVtaXR0ZXIoewogICAgICBtYWluRW1pdHRlciwKICAgICAgY2FudmFzLAogICAgICB4LAogICAgICB5LAogICAgICByYWRpdXMsCiAgICAgIGNvbG9yID0gQ09MT1IsCiAgICAgIHpvbmUgPSAiZGVhZCIsCiAgICAgIG9uY2UgPSAiYWxsIiwKICAgICAgYWxwaGEgPSAwLjg1LAogICAgICBncmF2aXR5ID0gMy41CiAgICB9KSB7CiAgICAgIGNvbnN0IGVtaXR0ZXIgPSB0aGlzLnByb3Rvbi5wb29sLmdldChQcm90b24uRW1pdHRlcik7CiAgICAgIGlmICghZW1pdHRlci5jb21wbGV0ZWQpIHsKICAgICAgICBlbWl0dGVyLnJhdGUgPSBuZXcgUHJvdG9uLlJhdGUodGhpcy5udW0gPyBuZXcgUHJvdG9uLlNwYW4odGhpcy5udW0pIDogbmV3IFByb3Rvbi5TcGFuKDQsIDkpLCBuZXcgUHJvdG9uLlNwYW4oMS42LCAyLjIpKTsKICAgICAgICBjb25zdCByYWRpdXNJbml0ID0gbWFpbkVtaXR0ZXIgPyBuZXcgUHJvdG9uLlJhZGl1cygxMCwgMTEwKSA6IG5ldyBQcm90b24uUmFkaXVzKDMsIHJhZGl1cyk7CiAgICAgICAgZW1pdHRlci5hZGRJbml0aWFsaXplKG5ldyBQcm90b24uTWFzcygxKSk7CiAgICAgICAgZW1pdHRlci5hZGRJbml0aWFsaXplKHJhZGl1c0luaXQpOwogICAgICAgIGVtaXR0ZXIuYWRkSW5pdGlhbGl6ZShuZXcgUHJvdG9uLkxpZmUoMywgNikpOwogICAgICAgIGVtaXR0ZXIuYWRkSW5pdGlhbGl6ZShuZXcgUHJvdG9uLlZlbG9jaXR5KG5ldyBQcm90b24uU3Bhbig0LCA2KSwgbmV3IFByb3Rvbi5TcGFuKC05MCwgOTApLCAicG9sYXIiKSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIobmV3IFByb3Rvbi5BbHBoYShhbHBoYSwgMC4yKSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIobmV3IFByb3Rvbi5Db2xvcihjb2xvcikpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uU2NhbGUoMSwgMC4zKSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIobmV3IFByb3Rvbi5Sb3RhdGUoKSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIobmV3IFByb3Rvbi5HcmF2aXR5KGdyYXZpdHkpKTsKICAgICAgICBlbWl0dGVyLmFkZEJlaGF2aW91cih0aGlzLmN1c3RvbURlYWRCZWhhdmlvdXIoY2FudmFzKSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIobmV3IFByb3Rvbi5Dcm9zc1pvbmUobmV3IFByb3Rvbi5SZWN0Wm9uZSgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpLCB6b25lKSk7CiAgICAgIH0KICAgICAgZW1pdHRlci5wLnggPSB4OwogICAgICBlbWl0dGVyLnAueSA9IHk7CiAgICAgIGlmIChvbmNlID09PSAib25jZSIpIGVtaXR0ZXIuZW1pdCgib25jZSIpO2Vsc2UgZW1pdHRlci5lbWl0KCk7CiAgICAgIHRoaXMucHJvdG9uLmFkZEVtaXR0ZXIoZW1pdHRlcik7CiAgICAgIC8vdGhpcy5leHBpcmVFbWl0dGVyKGVtaXR0ZXIpOwogICAgfSwKCiAgICBleHBpcmVFbWl0dGVyKGVtaXR0ZXIpIHsKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgZW1pdHRlci5jb21wbGV0ZWQgPSB0cnVlOwogICAgICAgIHRoaXMucHJvdG9uLnBvb2wuZXhwaXJlKGVtaXR0ZXIpOwogICAgICAgIHRoaXMucHJvdG9uLnJlbW92ZUVtaXR0ZXIoZW1pdHRlcik7CiAgICAgIH0sIDUwMCk7CiAgICB9LAogICAgY3VzdG9tRGVhZEJlaGF2aW91cihjYW52YXMpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpbml0aWFsaXplOiBwYXJ0aWNsZSA9PiB7CiAgICAgICAgICBwYXJ0aWNsZS5kYXRhID0gcGFydGljbGUuZGF0YSB8fCB7fTsKICAgICAgICAgIHBhcnRpY2xlLmRhdGEub2xkUmFkaXVzID0gcGFydGljbGUucmFkaXVzOwogICAgICAgICAgcGFydGljbGUuZGF0YS5lbWl0dGVyQ291bnQgPSAwOwogICAgICAgIH0sCiAgICAgICAgYXBwbHlCZWhhdmlvdXI6IHBhcnRpY2xlID0+IHsKICAgICAgICAgIGlmIChwYXJ0aWNsZS5yYWRpdXMgPCA1KSByZXR1cm47CiAgICAgICAgICBpZiAocGFydGljbGUuZGF0YS5lbWl0dGVyQ291bnQgPj0gMikgcmV0dXJuOwogICAgICAgICAgaWYgKHBhcnRpY2xlLnJhZGl1cyA8PSAxIC8gMyAqIHBhcnRpY2xlLmRhdGEub2xkUmFkaXVzKSB7CiAgICAgICAgICAgIHBhcnRpY2xlLmRhdGEuZW1pdHRlckNvdW50Kys7CiAgICAgICAgICAgIHRoaXMuY3JlYXRlRW1pdHRlcih7CiAgICAgICAgICAgICAgY2FudmFzLAogICAgICAgICAgICAgIHg6IHBhcnRpY2xlLnAueCwKICAgICAgICAgICAgICB5OiBwYXJ0aWNsZS5wLnksCiAgICAgICAgICAgICAgcmFkaXVzOiBwYXJ0aWNsZS5yYWRpdXMgKiAoMSAvIDIpLAogICAgICAgICAgICAgIGFscGhhOiAwLjUsCiAgICAgICAgICAgICAgZ3Jhdml0eTogNSwKICAgICAgICAgICAgICBjb2xvcjogcGFydGljbGUuY29sb3IsCiAgICAgICAgICAgICAgb25jZTogIm9uY2UiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgIH0sCiAgICByZW5kZXJQcm90b24oKSB7CiAgICAgIHRoaXMucHJvdG9uICYmIHRoaXMucHJvdG9uLnVwZGF0ZSgpOwogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMucHJvdG9uLmRlc3Ryb3koKTsKICAgICAgUkFGTWFuYWdlci5yZW1vdmUodGhpcy5yZW5kZXJQcm90b24pOwogICAgfSBjYXRjaCAoZSkge30KICB9Cn07"},{"version":3,"mappings":"AAYA;AACA;AACA;AAEA,eACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAA;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;QACAN;QACAO;QACAC;QACAC;QACAC;MACA;MAEAC;IACA;IACAC;MAAAC;MAAAC;IAAA;MACA;IACA;IACAC;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACAC;QACAC;MACA;MAEAD;QACAE;MACA;MAEAF;QACAC;QACAA;QACAA;QAEAA;QACAA;QACAA;QAEAA;QACAE;QAEAF;QACAA;QACAA;QACAA;MACA;MAEAD;MAEA;QACA;UACAC,YACAC,cACAA,cACAA,iBACA,GACAE,aACA,KACA;QACA;UACA;UAEA;YACA,QACAF,eACAG;YACA,QACAH,eACAG;YAEA,uCACAJ;UACA;QACA;MACA;MAEA;IACA;IAEAK;MACAf;MACAT;MACAO;MACAC;MACAe;MACArB;MACAQ;MACAe;MACAC;MACAC;IACA;MACA;MAEA;QACAC,+BACA,8DACA,0BACA;QAEA,iCACA,6BACA;QACAA;QACAA;QACAA;QACAA,sBACA,oBACA,uBACA,0BACA,QACA,CACA;QAEAA;QACAA;QACAA;QACAA;QACAA;QAEAA;QACAA,qBACA,qBACA,wDACAlB,KACA,CACA;MACA;MAEAkB;MACAA;MACA,+CACAA;MAEA;MACA;IACA;;IAEAC;MACAC;QACAF;QACA;QACA;MACA;IACA;IAEAG;MACA;QACAC;UACAZ;UACAA;UACAA;QACA;QACAa;UACA;UACA;UAEA;YACAb;YACA;cACApB;cACAO;cACAC;cACAe;cACAG;cACAC;cACAzB;cACAuB;YACA;UACA;QACA;MACA;IACA;IACAS;MACA;IACA;EACA;EACAC;IACA;MACA;MACAxB;IACA;EACA;AACA","names":["name","components","CanvasComp","props","canvas","bg","color","num","config","methods","canvasInited","x","y","mainEmitter","zone","RAFManager","canvasResize","width","height","canvasMouseDown","createProton","createRenderer","renderer","context","particle","drawPolygon","Math","radius","createEmitter","once","alpha","gravity","emitter","expireEmitter","setTimeout","customDeadBehaviour","initialize","applyBehaviour","renderProton","beforeDestroy"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles","sources":["PolygonParticles.vue"],"sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default {\n  name: \"PolygonParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      this.proton = new Proton();\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      renderer.onParticleDead = particle => {};\n\n      const drawPolygon = (particle, count) => {\n        if (count >= 7) {\n          context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n        } else {\n          const radius = particle.radius;\n\n          for (let i = 0; i <= count; i++) {\n            let x =\n              particle.p.x +\n              radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n            let y =\n              particle.p.y +\n              radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n            if (i === 0) context.moveTo(x, y);\n            else context.lineTo(x, y);\n          }\n        }\n      };\n\n      return renderer;\n    },\n\n    createEmitter({\n      mainEmitter,\n      canvas,\n      x,\n      y,\n      radius,\n      color = COLOR,\n      zone = \"dead\",\n      once = \"all\",\n      alpha = 0.85,\n      gravity = 3.5\n    }) {\n      const emitter = this.proton.pool.get(Proton.Emitter);\n\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(\n          this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n          new Proton.Span(1.6, 2.2)\n        );\n\n        const radiusInit = mainEmitter\n          ? new Proton.Radius(10, 110)\n          : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(\n          new Proton.Velocity(\n            new Proton.Span(4, 6),\n            new Proton.Span(-90, 90),\n            \"polar\"\n          )\n        );\n\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(\n          new Proton.CrossZone(\n            new Proton.RectZone(0, 0, canvas.width, canvas.height),\n            zone\n          )\n        );\n      }\n\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");\n      else emitter.emit();\n\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    },\n\n    expireEmitter(emitter) {\n      setTimeout(() => {\n        emitter.completed = true;\n        this.proton.pool.expire(emitter);\n        this.proton.removeEmitter(emitter);\n      }, 500);\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize: particle => {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: particle => {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n\n          if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            this.createEmitter({\n              canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"]}]}